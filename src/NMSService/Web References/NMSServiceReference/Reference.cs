//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace NMSService.NMSServiceReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TimeSheetBotService_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService")]
    public partial class TimeSheetBotService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetEmployeeByPhoneNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimeSheetsPerDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimeSheetsPerWeekOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddEmployeeByEMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidatePassCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmployeeTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTimeSheetOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostTimeSheetOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TimeSheetBotService() {
            this.Url = global::NMSService.Properties.Settings.Default.NMSService_NMSServiceReference_TimeSheetBotService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetEmployeeByPhoneNoCompletedEventHandler GetEmployeeByPhoneNoCompleted;
        
        /// <remarks/>
        public event TimeSheetsPerDayCompletedEventHandler TimeSheetsPerDayCompleted;
        
        /// <remarks/>
        public event TimeSheetsPerWeekCompletedEventHandler TimeSheetsPerWeekCompleted;
        
        /// <remarks/>
        public event GetEmployeeByIDCompletedEventHandler GetEmployeeByIDCompleted;

        public void GetEmployeeByPhoneNo(string phone, ref root1 xmlPort)
        {
            throw new NotImplementedException();
        }

        /// <remarks/>
        public event AddEmployeeByEMailCompletedEventHandler AddEmployeeByEMailCompleted;
        
        /// <remarks/>
        public event ValidatePassCodeCompletedEventHandler ValidatePassCodeCompleted;
        
        /// <remarks/>
        public event GetEmployeeProjectsCompletedEventHandler GetEmployeeProjectsCompleted;
        
        /// <remarks/>
        public event GetEmployeeTasksCompletedEventHandler GetEmployeeTasksCompleted;
        
        /// <remarks/>
        public event AddTimeSheetCompletedEventHandler AddTimeSheetCompleted;
        
        /// <remarks/>
        public event PostTimeSheetCompletedEventHandler PostTimeSheetCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService:GetEmployeeByPhoneNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", ResponseElementName="GetEmployeeByPhoneNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetEmployeeByPhoneNo(string phoneNo, ref root employeeXMLPort) {
            object[] results = this.Invoke("GetEmployeeByPhoneNo", new object[] {
                        phoneNo,
                        employeeXMLPort});
            employeeXMLPort = ((root)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeByPhoneNoAsync(string phoneNo, root employeeXMLPort) {
            this.GetEmployeeByPhoneNoAsync(phoneNo, employeeXMLPort, null);
        }
        
        /// <remarks/>
        public void GetEmployeeByPhoneNoAsync(string phoneNo, root employeeXMLPort, object userState) {
            if ((this.GetEmployeeByPhoneNoOperationCompleted == null)) {
                this.GetEmployeeByPhoneNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeByPhoneNoOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeByPhoneNo", new object[] {
                        phoneNo,
                        employeeXMLPort}, this.GetEmployeeByPhoneNoOperationCompleted, userState);
        }
        
        private void OnGetEmployeeByPhoneNoOperationCompleted(object arg) {
            if ((this.GetEmployeeByPhoneNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeByPhoneNoCompleted(this, new GetEmployeeByPhoneNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService:TimeSheetsPerDay", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", ResponseElementName="TimeSheetsPerDay_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int TimeSheetsPerDay([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateP, string employeeNoP, ref root1 timeSheetPerDayXMLPort, ref string errorText) {
            object[] results = this.Invoke("TimeSheetsPerDay", new object[] {
                        dateP,
                        employeeNoP,
                        timeSheetPerDayXMLPort,
                        errorText});
            timeSheetPerDayXMLPort = ((root1)(results[1]));
            errorText = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TimeSheetsPerDayAsync(System.DateTime dateP, string employeeNoP, root1 timeSheetPerDayXMLPort, string errorText) {
            this.TimeSheetsPerDayAsync(dateP, employeeNoP, timeSheetPerDayXMLPort, errorText, null);
        }
        
        /// <remarks/>
        public void TimeSheetsPerDayAsync(System.DateTime dateP, string employeeNoP, root1 timeSheetPerDayXMLPort, string errorText, object userState) {
            if ((this.TimeSheetsPerDayOperationCompleted == null)) {
                this.TimeSheetsPerDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimeSheetsPerDayOperationCompleted);
            }
            this.InvokeAsync("TimeSheetsPerDay", new object[] {
                        dateP,
                        employeeNoP,
                        timeSheetPerDayXMLPort,
                        errorText}, this.TimeSheetsPerDayOperationCompleted, userState);
        }
        
        private void OnTimeSheetsPerDayOperationCompleted(object arg) {
            if ((this.TimeSheetsPerDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimeSheetsPerDayCompleted(this, new TimeSheetsPerDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService:TimeSheetsPerWeek", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", ResponseElementName="TimeSheetsPerWeek_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int TimeSheetsPerWeek([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDateP, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDateP, string employeeNoP, ref root2 timeSheetPerWeekXMLPort, ref string errorText) {
            object[] results = this.Invoke("TimeSheetsPerWeek", new object[] {
                        startDateP,
                        endDateP,
                        employeeNoP,
                        timeSheetPerWeekXMLPort,
                        errorText});
            timeSheetPerWeekXMLPort = ((root2)(results[1]));
            errorText = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TimeSheetsPerWeekAsync(System.DateTime startDateP, System.DateTime endDateP, string employeeNoP, root2 timeSheetPerWeekXMLPort, string errorText) {
            this.TimeSheetsPerWeekAsync(startDateP, endDateP, employeeNoP, timeSheetPerWeekXMLPort, errorText, null);
        }
        
        /// <remarks/>
        public void TimeSheetsPerWeekAsync(System.DateTime startDateP, System.DateTime endDateP, string employeeNoP, root2 timeSheetPerWeekXMLPort, string errorText, object userState) {
            if ((this.TimeSheetsPerWeekOperationCompleted == null)) {
                this.TimeSheetsPerWeekOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimeSheetsPerWeekOperationCompleted);
            }
            this.InvokeAsync("TimeSheetsPerWeek", new object[] {
                        startDateP,
                        endDateP,
                        employeeNoP,
                        timeSheetPerWeekXMLPort,
                        errorText}, this.TimeSheetsPerWeekOperationCompleted, userState);
        }
        
        private void OnTimeSheetsPerWeekOperationCompleted(object arg) {
            if ((this.TimeSheetsPerWeekCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimeSheetsPerWeekCompleted(this, new TimeSheetsPerWeekCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService:GetEmployeeByID", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", ResponseElementName="GetEmployeeByID_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int GetEmployeeByID(int channelType, string channelID, ref root3 employeeByIDXMLPort, ref string errorText) {
            object[] results = this.Invoke("GetEmployeeByID", new object[] {
                        channelType,
                        channelID,
                        employeeByIDXMLPort,
                        errorText});
            employeeByIDXMLPort = ((root3)(results[1]));
            errorText = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeByIDAsync(int channelType, string channelID, root3 employeeByIDXMLPort, string errorText) {
            this.GetEmployeeByIDAsync(channelType, channelID, employeeByIDXMLPort, errorText, null);
        }
        
        /// <remarks/>
        public void GetEmployeeByIDAsync(int channelType, string channelID, root3 employeeByIDXMLPort, string errorText, object userState) {
            if ((this.GetEmployeeByIDOperationCompleted == null)) {
                this.GetEmployeeByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeByIDOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeByID", new object[] {
                        channelType,
                        channelID,
                        employeeByIDXMLPort,
                        errorText}, this.GetEmployeeByIDOperationCompleted, userState);
        }
        
        private void OnGetEmployeeByIDOperationCompleted(object arg) {
            if ((this.GetEmployeeByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeByIDCompleted(this, new GetEmployeeByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService:AddEmployeeByEMail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", ResponseElementName="AddEmployeeByEMail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int AddEmployeeByEMail(int channelType, string eMail, ref string firstName, ref string lastName, ref string errorText) {
            object[] results = this.Invoke("AddEmployeeByEMail", new object[] {
                        channelType,
                        eMail,
                        firstName,
                        lastName,
                        errorText});
            firstName = ((string)(results[1]));
            lastName = ((string)(results[2]));
            errorText = ((string)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddEmployeeByEMailAsync(int channelType, string eMail, string firstName, string lastName, string errorText) {
            this.AddEmployeeByEMailAsync(channelType, eMail, firstName, lastName, errorText, null);
        }
        
        /// <remarks/>
        public void AddEmployeeByEMailAsync(int channelType, string eMail, string firstName, string lastName, string errorText, object userState) {
            if ((this.AddEmployeeByEMailOperationCompleted == null)) {
                this.AddEmployeeByEMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddEmployeeByEMailOperationCompleted);
            }
            this.InvokeAsync("AddEmployeeByEMail", new object[] {
                        channelType,
                        eMail,
                        firstName,
                        lastName,
                        errorText}, this.AddEmployeeByEMailOperationCompleted, userState);
        }
        
        private void OnAddEmployeeByEMailOperationCompleted(object arg) {
            if ((this.AddEmployeeByEMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddEmployeeByEMailCompleted(this, new AddEmployeeByEMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService:ValidatePassCode", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", ResponseElementName="ValidatePassCode_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int ValidatePassCode(int channelType, string eMail, string passCode, string channelID, ref root3 employeeByIDXMLPort, ref string errorText) {
            object[] results = this.Invoke("ValidatePassCode", new object[] {
                        channelType,
                        eMail,
                        passCode,
                        channelID,
                        employeeByIDXMLPort,
                        errorText});
            employeeByIDXMLPort = ((root3)(results[1]));
            errorText = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ValidatePassCodeAsync(int channelType, string eMail, string passCode, string channelID, root3 employeeByIDXMLPort, string errorText) {
            this.ValidatePassCodeAsync(channelType, eMail, passCode, channelID, employeeByIDXMLPort, errorText, null);
        }
        
        /// <remarks/>
        public void ValidatePassCodeAsync(int channelType, string eMail, string passCode, string channelID, root3 employeeByIDXMLPort, string errorText, object userState) {
            if ((this.ValidatePassCodeOperationCompleted == null)) {
                this.ValidatePassCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidatePassCodeOperationCompleted);
            }
            this.InvokeAsync("ValidatePassCode", new object[] {
                        channelType,
                        eMail,
                        passCode,
                        channelID,
                        employeeByIDXMLPort,
                        errorText}, this.ValidatePassCodeOperationCompleted, userState);
        }
        
        private void OnValidatePassCodeOperationCompleted(object arg) {
            if ((this.ValidatePassCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidatePassCodeCompleted(this, new ValidatePassCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService:GetEmployeeProjects", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", ResponseElementName="GetEmployeeProjects_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int GetEmployeeProjects(string employeeNoP, ref root4 employeeProjectsXMLPort, ref string errorText) {
            object[] results = this.Invoke("GetEmployeeProjects", new object[] {
                        employeeNoP,
                        employeeProjectsXMLPort,
                        errorText});
            employeeProjectsXMLPort = ((root4)(results[1]));
            errorText = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeProjectsAsync(string employeeNoP, root4 employeeProjectsXMLPort, string errorText) {
            this.GetEmployeeProjectsAsync(employeeNoP, employeeProjectsXMLPort, errorText, null);
        }
        
        /// <remarks/>
        public void GetEmployeeProjectsAsync(string employeeNoP, root4 employeeProjectsXMLPort, string errorText, object userState) {
            if ((this.GetEmployeeProjectsOperationCompleted == null)) {
                this.GetEmployeeProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeProjectsOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeProjects", new object[] {
                        employeeNoP,
                        employeeProjectsXMLPort,
                        errorText}, this.GetEmployeeProjectsOperationCompleted, userState);
        }
        
        private void OnGetEmployeeProjectsOperationCompleted(object arg) {
            if ((this.GetEmployeeProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeProjectsCompleted(this, new GetEmployeeProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService:GetEmployeeTasks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", ResponseElementName="GetEmployeeTasks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int GetEmployeeTasks(string employeeNoP, string projectNoP, ref root5 employeeTasksXMLPort, ref string errorText) {
            object[] results = this.Invoke("GetEmployeeTasks", new object[] {
                        employeeNoP,
                        projectNoP,
                        employeeTasksXMLPort,
                        errorText});
            employeeTasksXMLPort = ((root5)(results[1]));
            errorText = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmployeeTasksAsync(string employeeNoP, string projectNoP, root5 employeeTasksXMLPort, string errorText) {
            this.GetEmployeeTasksAsync(employeeNoP, projectNoP, employeeTasksXMLPort, errorText, null);
        }
        
        /// <remarks/>
        public void GetEmployeeTasksAsync(string employeeNoP, string projectNoP, root5 employeeTasksXMLPort, string errorText, object userState) {
            if ((this.GetEmployeeTasksOperationCompleted == null)) {
                this.GetEmployeeTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmployeeTasksOperationCompleted);
            }
            this.InvokeAsync("GetEmployeeTasks", new object[] {
                        employeeNoP,
                        projectNoP,
                        employeeTasksXMLPort,
                        errorText}, this.GetEmployeeTasksOperationCompleted, userState);
        }
        
        private void OnGetEmployeeTasksOperationCompleted(object arg) {
            if ((this.GetEmployeeTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmployeeTasksCompleted(this, new GetEmployeeTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService:AddTimeSheet", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", ResponseElementName="AddTimeSheet_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int AddTimeSheet(string employeeNoP, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateP, string projectNoP, string assignmentCodeP, decimal qtyP, string commentP, ref string errorText) {
            object[] results = this.Invoke("AddTimeSheet", new object[] {
                        employeeNoP,
                        dateP,
                        projectNoP,
                        assignmentCodeP,
                        qtyP,
                        commentP,
                        errorText});
            errorText = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddTimeSheetAsync(string employeeNoP, System.DateTime dateP, string projectNoP, string assignmentCodeP, decimal qtyP, string commentP, string errorText) {
            this.AddTimeSheetAsync(employeeNoP, dateP, projectNoP, assignmentCodeP, qtyP, commentP, errorText, null);
        }
        
        /// <remarks/>
        public void AddTimeSheetAsync(string employeeNoP, System.DateTime dateP, string projectNoP, string assignmentCodeP, decimal qtyP, string commentP, string errorText, object userState) {
            if ((this.AddTimeSheetOperationCompleted == null)) {
                this.AddTimeSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTimeSheetOperationCompleted);
            }
            this.InvokeAsync("AddTimeSheet", new object[] {
                        employeeNoP,
                        dateP,
                        projectNoP,
                        assignmentCodeP,
                        qtyP,
                        commentP,
                        errorText}, this.AddTimeSheetOperationCompleted, userState);
        }
        
        private void OnAddTimeSheetOperationCompleted(object arg) {
            if ((this.AddTimeSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTimeSheetCompleted(this, new AddTimeSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService:PostTimeSheet", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", ResponseElementName="PostTimeSheet_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/TimeSheetBotService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int PostTimeSheet(string employeeNoP, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDateP, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDateP, ref string errorText) {
            object[] results = this.Invoke("PostTimeSheet", new object[] {
                        employeeNoP,
                        startDateP,
                        endDateP,
                        errorText});
            errorText = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PostTimeSheetAsync(string employeeNoP, System.DateTime startDateP, System.DateTime endDateP, string errorText) {
            this.PostTimeSheetAsync(employeeNoP, startDateP, endDateP, errorText, null);
        }
        
        /// <remarks/>
        public void PostTimeSheetAsync(string employeeNoP, System.DateTime startDateP, System.DateTime endDateP, string errorText, object userState) {
            if ((this.PostTimeSheetOperationCompleted == null)) {
                this.PostTimeSheetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostTimeSheetOperationCompleted);
            }
            this.InvokeAsync("PostTimeSheet", new object[] {
                        employeeNoP,
                        startDateP,
                        endDateP,
                        errorText}, this.PostTimeSheetOperationCompleted, userState);
        }
        
        private void OnPostTimeSheetOperationCompleted(object arg) {
            if ((this.PostTimeSheetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostTimeSheetCompleted(this, new PostTimeSheetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50070")]
    public partial class root {
        
        private Employee[] employeeField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Employee")]
        public Employee[] Employee {
            get {
                return this.employeeField;
            }
            set {
                this.employeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50070")]
    public partial class Employee {
        
        private string noField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string phoneNoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("No.")]
        public string No {
            get {
                return this.noField;
            }
            set {
                this.noField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PhoneNo.")]
        public string PhoneNo {
            get {
                return this.phoneNoField;
            }
            set {
                this.phoneNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Projects", Namespace="urn:microsoft-dynamics-nav/xmlports/x50075")]
    public partial class Projects1 {
        
        private string taskNoField;
        
        private string taskDescriptionField;
        
        private string assignmentCodeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string TaskNo {
            get {
                return this.taskNoField;
            }
            set {
                this.taskNoField = value;
            }
        }
        
        /// <remarks/>
        public string TaskDescription {
            get {
                return this.taskDescriptionField;
            }
            set {
                this.taskDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string AssignmentCode {
            get {
                return this.assignmentCodeField;
            }
            set {
                this.assignmentCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="root", Namespace="urn:microsoft-dynamics-nav/xmlports/x50075")]
    public partial class root5 {
        
        private Projects1[] projectsField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Projects")]
        public Projects1[] Projects {
            get {
                return this.projectsField;
            }
            set {
                this.projectsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50074")]
    public partial class Projects {
        
        private string projectNoField;
        
        private string projectDescriptionField;
        
        /// <remarks/>
        public string ProjectNo {
            get {
                return this.projectNoField;
            }
            set {
                this.projectNoField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectDescription {
            get {
                return this.projectDescriptionField;
            }
            set {
                this.projectDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="root", Namespace="urn:microsoft-dynamics-nav/xmlports/x50074")]
    public partial class root4 {
        
        private Projects[] projectsField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Projects")]
        public Projects[] Projects {
            get {
                return this.projectsField;
            }
            set {
                this.projectsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Employee", Namespace="urn:microsoft-dynamics-nav/xmlports/x50073")]
    public partial class Employee1 {
        
        private string noField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("No.")]
        public string No {
            get {
                return this.noField;
            }
            set {
                this.noField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="root", Namespace="urn:microsoft-dynamics-nav/xmlports/x50073")]
    public partial class root3 {
        
        private Employee1[] employeeField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Employee")]
        public Employee1[] Employee {
            get {
                return this.employeeField;
            }
            set {
                this.employeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="TimeSheet", Namespace="urn:microsoft-dynamics-nav/xmlports/x50072")]
    public partial class TimeSheet1 {
        
        private string[] postingDateField;
        
        private string[] dayNameField;
        
        private string[] quantityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PostingDate")]
        public string[] PostingDate {
            get {
                return this.postingDateField;
            }
            set {
                this.postingDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DayName")]
        public string[] DayName {
            get {
                return this.dayNameField;
            }
            set {
                this.dayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Quantity")]
        public string[] Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="root", Namespace="urn:microsoft-dynamics-nav/xmlports/x50072")]
    public partial class root2 {
        
        private TimeSheet1[] timeSheetField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TimeSheet")]
        public TimeSheet1[] TimeSheet {
            get {
                return this.timeSheetField;
            }
            set {
                this.timeSheetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50071")]
    public partial class TimeSheet {
        
        private string postingDateField;
        
        private string dayNameField;
        
        private string projectNoField;
        
        private string assignementCodeField;
        
        private string quantityField;
        
        private string commentField;
        
        private string jobTaskFullNoField;
        
        private string taskDescriptionField;
        
        private string externalNoField;
        
        private int jobLedgerEntryNoField;
        
        public TimeSheet() {
            this.jobLedgerEntryNoField = 0;
        }
        
        /// <remarks/>
        public string PostingDate {
            get {
                return this.postingDateField;
            }
            set {
                this.postingDateField = value;
            }
        }
        
        /// <remarks/>
        public string DayName {
            get {
                return this.dayNameField;
            }
            set {
                this.dayNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ProjectNo.")]
        public string ProjectNo {
            get {
                return this.projectNoField;
            }
            set {
                this.projectNoField = value;
            }
        }
        
        /// <remarks/>
        public string AssignementCode {
            get {
                return this.assignementCodeField;
            }
            set {
                this.assignementCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("JobTaskFullNo.")]
        public string JobTaskFullNo {
            get {
                return this.jobTaskFullNoField;
            }
            set {
                this.jobTaskFullNoField = value;
            }
        }
        
        /// <remarks/>
        public string TaskDescription {
            get {
                return this.taskDescriptionField;
            }
            set {
                this.taskDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExternalNo.")]
        public string ExternalNo {
            get {
                return this.externalNoField;
            }
            set {
                this.externalNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("JobLedgerEntryNo.")]
        public int JobLedgerEntryNo {
            get {
                return this.jobLedgerEntryNoField;
            }
            set {
                this.jobLedgerEntryNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="root", Namespace="urn:microsoft-dynamics-nav/xmlports/x50071")]
    public partial class root1 {
        
        private TimeSheet[] timeSheetField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TimeSheet")]
        public TimeSheet[] TimeSheet {
            get {
                return this.timeSheetField;
            }
            set {
                this.timeSheetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetEmployeeByPhoneNoCompletedEventHandler(object sender, GetEmployeeByPhoneNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeByPhoneNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeByPhoneNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public root employeeXMLPort {
            get {
                this.RaiseExceptionIfNecessary();
                return ((root)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void TimeSheetsPerDayCompletedEventHandler(object sender, TimeSheetsPerDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimeSheetsPerDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TimeSheetsPerDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public root1 timeSheetPerDayXMLPort {
            get {
                this.RaiseExceptionIfNecessary();
                return ((root1)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void TimeSheetsPerWeekCompletedEventHandler(object sender, TimeSheetsPerWeekCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TimeSheetsPerWeekCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TimeSheetsPerWeekCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public root2 timeSheetPerWeekXMLPort {
            get {
                this.RaiseExceptionIfNecessary();
                return ((root2)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetEmployeeByIDCompletedEventHandler(object sender, GetEmployeeByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public root3 employeeByIDXMLPort {
            get {
                this.RaiseExceptionIfNecessary();
                return ((root3)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddEmployeeByEMailCompletedEventHandler(object sender, AddEmployeeByEMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddEmployeeByEMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddEmployeeByEMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string firstName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string lastName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string errorText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ValidatePassCodeCompletedEventHandler(object sender, ValidatePassCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidatePassCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidatePassCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public root3 employeeByIDXMLPort {
            get {
                this.RaiseExceptionIfNecessary();
                return ((root3)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetEmployeeProjectsCompletedEventHandler(object sender, GetEmployeeProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public root4 employeeProjectsXMLPort {
            get {
                this.RaiseExceptionIfNecessary();
                return ((root4)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetEmployeeTasksCompletedEventHandler(object sender, GetEmployeeTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmployeeTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmployeeTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public root5 employeeTasksXMLPort {
            get {
                this.RaiseExceptionIfNecessary();
                return ((root5)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddTimeSheetCompletedEventHandler(object sender, AddTimeSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTimeSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTimeSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void PostTimeSheetCompletedEventHandler(object sender, PostTimeSheetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostTimeSheetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostTimeSheetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorText {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591